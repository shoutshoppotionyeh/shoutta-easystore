/*============================================================================
  Built with Sass - http://sass-lang.com/
==============================================================================*/

/*================ Variables, theme settings, and Sass mixins ================*/
/*================ Global | Sass Mixins ================*/
@mixin clearfix() {
  &:after {
    content: "";
    display: table;
    clear: both; }
  *zoom: 1;
}

@mixin prefix($property, $value) {
  -webkit-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  -o-#{$property}: #{$value};
  #{$property}: #{$value};
}

@mixin transition($transition: 0.1s all) {
  @include prefix('transition', #{$transition});
}

@mixin transform($transform: 0.1s all) {
  @include prefix('transform', #{$transform});
}

@mixin animation($animation) {
  -webkit-animation: $animation;
  -moz-animation:    $animation;
  -o-animation:      $animation;
  animation:         $animation;
}

@mixin gradient($from, $to, $fallback) {
  background: $fallback;
  background: -moz-linear-gradient(top, $from 0%, $to 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$from), color-stop(100%,$to));
  background: -webkit-linear-gradient(top, $from 0%, $to 100%);
  background: -o-linear-gradient(top, $from 0%, $to 100%);
  background: -ms-linear-gradient(top, $from 0%, $to 100%);
  background: linear-gradient(top bottom, $from 0%, $to 100%);
}

@mixin backface($visibility: hidden) {
  @include prefix('backface-visibility', #{$visibility});
}

@mixin visuallyHidden {
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  overflow: hidden;
  position: absolute;
  height: 1px;
  width: 1px;
}

@mixin desaturate {
  -webkit-filter: grayscale(100%);
  filter: grayscale(100%);
}

@mixin box-sizing($box-sizing: border-box) {
  -webkit-box-sizing: #{$box-sizing};
  -moz-box-sizing: #{$box-sizing};
  box-sizing: #{$box-sizing};
}

@function em($target, $context: $baseFontSize) {
  @if $target == 0 {
    @return 0;
  }
  @return $target / $context + 0em;
}

@function color-control($color) {
  @if (lightness( $color ) > 50) {
    @return #000;
  }
  @else {
    @return #fff;
  }
}

/*============================================================================
  Dependency-free breakpoint mixin
    - http://blog.grayghostvisuals.com/sass/sass-media-query-mixin/
==============================================================================*/
$min: min-width;
$max: max-width;
@mixin at-query ($constraint, $viewport1, $viewport2:null) {
  @if $constraint == $min {
    @media screen and ($min: $viewport1) {
      @content;
    }
  } @else if $constraint == $max {
    @media screen and ($max: $viewport1) {
      @content;
    }
  } @else {
    @media screen and ($min: $viewport1) and ($max: $viewport2) {
      @content;
    }
  }
}

/*============================================================================
  Accent text
==============================================================================*/

@mixin accentFontStack {
  font-size: em($accentFontSize);
  font-family: $accentFontStack;
  font-weight: $accentFontWeight;
  font-style: normal;
}

$siteWidth: 1400px;

$gutter: 30px;
$gridGutter: 30px;
$radius: 0px;

$small: 768px;
$medium: 991px;
$large: 992px;

$viewportIncrement: 1px;
$postSmall: $small + $viewportIncrement;
$preMedium: $medium - $viewportIncrement;
$preLarge: $large - $viewportIncrement;

/*================ The following are dependencies of csswizardry grid ================*/
$breakpoints: (
  'small' '(max-width: #{$small})',
  'medium' '(min-width: #{$postSmall}) and (max-width: #{$medium})',
  'medium-down' '(max-width: #{$medium})',
  'large' '(min-width: #{$large})'
);
$breakpoint-has-widths: ('small', 'medium', 'medium-down', 'large');
$breakpoint-has-push:  ('medium', 'medium-down', 'large');
$breakpoint-has-pull:  ('medium', 'medium-down', 'large');

/*================ Color variables ================*/
$colorPrimary: map-get(map-get($presets, $current), link_text_color);
$colorSecondary: #868e96; //fixed

// Button
$btnFontFamily: map-get(map-get($presets, $current), button_font_family); //btn_font_family
$btnFontWeight: map-get(map-get($presets, $current), btn_font_weight); //btn_font_weight
$colorBtnPrimary: map-get(map-get($presets, $current), btn_bg_color); //btn_bg_color
$colorBtnPrimaryHover: lighten($colorBtnPrimary, 10%);
$colorBtnPrimaryActive: darken($colorBtnPrimaryHover, 10%);
$colorBtnPrimaryText: map-get(map-get($presets, $current), btn_text_color); //btn_text_color

$colorBtnSecondary: $colorSecondary;
$colorBtnSecondaryHover: lighten($colorBtnSecondary, 10%);
$colorBtnSecondaryActive: darken($colorBtnSecondaryHover, 10%);
$colorBtnSecondaryText: #FFF; 

$colorBtnTertiary: $colorSecondary;
$colorBtnTertiaryHover: lighten($colorSecondary, 10%);
$colorBtnTertiaryActive: darken($colorSecondary, 10%);
$colorBtnTertiaryText: #FFF;

// Text link colors
$colorLink: $colorPrimary;
$colorLinkHover: lighten($colorLink, 15%);

// Text colors
$colorTextBody: map-get(map-get($presets, $current), body_text_color); //body_text_color
$colorTopBarText: map-get(map-get($presets, $current), topbar_text_color); //topbar_text_color
$colorTextFooter: map-get(map-get($presets, $current), footer_text_color); //footer_text_color

// Backgrounds
$colorBody: map-get(map-get($presets, $current), wrapper_bg_color);
$colorHeader: $colorBody;
$colorTopBar: map-get(map-get($presets, $current), topbar_bg_color);
$colorFooter: map-get(map-get($presets, $current), footer_bg_color); //footer_bg_color
// Border colors
$colorBorder: map-get(map-get($presets, $current), navi_border_color); //navi_border_color

// Nav and dropdown link background
$colorNavText: map-get(map-get($presets, $current), heading_text_color); //heading_text_color

// Site Footer
$colorFooterBg: $colorFooter;
$colorFooterText: $colorTextFooter;

// Helper colors
$disabledGrey: #f3f3f3;
$disabledBorder: darken($disabledGrey, 35%);
$errorRed: #d02e2e;
$errorRedBg: #fff6f6;
$successGreen: #00C851;
$successGreenBg: #ecfef0; 

// Password page
$passwordPageUseBgImage: true;

// Body Font
$bodyFontStack: map-get(map-get($presets, $current), body_font_family);
$baseFontSize: map-get(map-get($presets, $current), body_font_size);

// Header Font
$headerFontStack: map-get(map-get($presets, $current), heading_font_family);
$headerFontWeight: map-get(map-get($presets, $current), heading_font_weight);
$headerBaseFontSize: map-get(map-get($presets, $current), heading_font_size);

// Navigation and buttons
$accentFontStack: $bodyFontStack;
$accentFontWeight: 400;
$accentFontSize: 16px;


// Topbar 
$topbarFontFamily: map-get(map-get($presets, $current), topbar_font_family); //topbar_font_family
$topbarTextAlign: map-get(map-get($presets, $current), topbar_text_align); //topbar_text_align
$topbarFontSize: map-get(map-get($presets, $current), topbar_font_size); //topbar_font_size
$topbarFontWeight: map-get(map-get($presets, $current), topbar_font_weight); //topbar_font_weight


/*================ Global | Normalize ================*/
*, input, :before, :after {
  @include box-sizing();
}

html {
  overflow-x: hidden;
}

html, body {
  padding: 0;
  margin: 0;
}

article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block;
}

audio, canvas, progress, video {
  display: inline-block;
  vertical-align: baseline;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}


/*================ Site-wide styles ================*/
/*================ Partials | Layout Styles ================*/
html {
  background-color: $colorBody;
}

body {
  background-color: $colorBody;
}

.wrapper {
  @include clearfix();
  max-width: $siteWidth;
  margin: 0 auto;
  padding: 0 ($gridGutter / 2);

  @include at-query ($min, $small) {
    padding: 0 $gridGutter;
  }
}

.main-content {
  display: block;
  margin-top: $gutter * 2;
  padding-bottom: $gutter;
}

hr {
  clear: both;
  border-top: solid $colorBorder;
  border-width: 1px 0 0;
  margin: $gutter 0;
  height: 0;

  &.hr--small {
    margin: ($gutter / 2) 0;
  }

  &.hr--clear {
    border-top-color: transparent;
  }

  .template-index .main-content .grid-uniform + &.hr--clear {
    display: none;
  }
}

/*================ Partials | Typography styles ================*/
body,
input,
textarea,
button,
select {
  font-size: $baseFontSize;
  line-height: 1.7;
  font-family: $bodyFontStack;
  color: $colorTextBody;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
}

h1, h2, h3, h4, h5, h6 {
  font-family: $headerFontStack;
  font-weight: $headerFontWeight;
  margin: 0 0 ($gutter / 2);
  line-height: 1.4;

  a {
    text-decoration: none;
    font-weight: inherit;
  }
}

/*================ Use em() Sass function to declare font-size ================*/
h1 {
  font-size: em($headerBaseFontSize);
  line-height: 1.2;
}

h2 {
  font-size: em(floor($headerBaseFontSize * 0.91)); //28px
  line-height: 1.3;
}

h3 {
  font-size: em(floor($headerBaseFontSize * 0.82)); //22px
  line-height: 1.4;
}

h4,
.tags {
  font-size: em(floor($headerBaseFontSize * 0.72)); //16px
  line-height: 1.6;
}

h5 {
  font-size: em(floor($headerBaseFontSize * 0.65)); //16px
  line-height: 1.6;
}

h6 {
  font-size: em(floor($headerBaseFontSize * 0.57)); //14px
  line-height: 1.7;
}


.h1 { @extend h1; }
.h2 { @extend h2; }
.h3 { @extend h3; }
.h4 { @extend h4; }
.h5 { @extend h5; }
.h6 { @extend h6; }

p {
  margin: 0 0 ($gutter / 2) 0;

  img {
    margin: 0;
  }
}

em {
  font-style: italic;
}

b, strong {
  font-weight: bold;
}

small {
  font-size: 0.9em;
}

sup, sub {
  position: relative;
  font-size: 60%;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}

sub {
  bottom: -0.5em;
}

blockquote {
  font-size: 1.125em;
  line-height: 1.45;
  font-style: italic;
  margin: 0 0 $gutter;
  padding: ($gutter / 2) $gutter;
  border-left: 1px solid $colorBorder;

  p {
    margin-bottom: 0;

    & + cite {
      margin-top: $gutter / 2;
    }
  }

  cite {
    display: block;
    font-size: 0.75em;

    &:before {
      content: "\2014 \0020";
    }
  }
}

code, pre {
  background-color: #faf7f5;
  font-family: Consolas,monospace;
  font-size: 1em;
  border: 0 none;
  padding: 0 2px;
  color: #51ab62;
}

pre {
  overflow: auto;
  padding: $gutter / 2;
  margin: 0 0 $gutter;
}

/*================ Partials | Lists ================*/
ul, ol {
  margin: 0 0 $gutter;
  padding: 0;
}

ul { list-style: none outside; }
ol { list-style: decimal; }
ul ul, ul ol,
ol ol, ol ul { margin: 4px 0 5px 20px; }
li { margin-bottom: 0.25em; }

ol, ul.square, ul.disc { margin-left: 20px; }
ul.square { list-style: square outside; }
ul.disc { list-style: disc outside; }
ol.alpha { list-style: lower-alpha outside; }

.inline-list li {
  display: inline-block;
  margin-bottom: 0;
}

/*================ Partials | Tables ================*/
table {
  width: 100%;
  margin-bottom: 1em;
  border-collapse: collapse;
  border-spacing: 0;
}

.table-wrap {
  max-width: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

th {
  font-weight: bold;
}

th, td {
  text-align: left;
  padding: $gutter / 2;
  border: 1px solid $colorBorder;
}

.table-order-control{
  background-color: rgba($colorTextBody , 0.04);
  padding: $gutter / 2;
  margin-bottom: $gutter / 2;
  table{
    margin-bottom: 0;
    th,td{
      border: none;
      border-bottom: 1px solid $colorBorder;
    }
    tfoot{
      tr{
        &:last-child{
          td{
            border-bottom: none;
            b,strong{
              font-size: 1.3em;
            }
          }
        }
      }
    }
    a{
      text-decoration: underline;
    }
  }
}

/*============================================================================
  #Grid Setup
    - Based on csswizardry grid, but with floated columns, a fixed gutter size, and BEM classes
    - Breakpoints defined above, under #Breakpoint and Grid Variables
    - Note the inclusion of .grid-uniform to take care of clearfixes on evenly sized grid items
==============================================================================*/
$responsive:         true;
$mobile-first:       true;
$use-silent-classes: false;
$push:               true;
$pull:               false;

/* Force clearfix on grids */
.grid,
.grid-uniform {
  @include clearfix;
}

/* Manual grid__item clearfix */
.grid__item.clear {
  clear: both;
}

$class-type: unquote(".");

@if $use-silent-classes == true {
  $class-type: unquote("%");
}

@mixin grid-media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn "Breakpoint '#{$media-query}' does not exist";
  }
}

/*============================================================================
  Drop relative positioning into silent classes which can't take advantage of
  the `[class*="push--"]` and `[class*="pull--"]` selectors.
==============================================================================*/
@mixin silent-relative() {
  @if $use-silent-classes == true {
    position:relative;
  }
}

/*============================================================================
  Grid Setup
    1. Allow the grid system to be used on lists.
    2. Remove any margins and paddings that might affect the grid system.
    3. Apply a negative `margin-left` to negate the columns' gutters.
==============================================================================*/
#{$class-type}grid,
#{$class-type}grid-uniform {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -$gridGutter;
  @include at-query($max, $medium) {
  	margin-left: -$gridGutter / 2;
  }
}

#{$class-type}grid__item {
  float: left;
  min-height: 1px;
  padding-left: $gridGutter;
  vertical-align: top;
  @include at-query($max, $medium) {
  	padding-left: $gridGutter / 2;
  }
  @if $mobile-first == true {
    width: 100%;
  }
  @include box-sizing();
}

/*============================================================================
  Reversed grids allow you to structure your source in the opposite
  order to how your rendered layout will appear.
==============================================================================*/
#{$class-type}grid--rev {
  @extend #{$class-type}grid;
  direction: rtl;
  text-align: left;

  > #{$class-type}grid__item {
    direction: ltr;
    text-align: left;
    float: right;
  }
}

/* Gutterless grids have all the properties of regular grids, minus any spacing. */
#{$class-type}grid--full {
  @extend #{$class-type}grid;
  margin-left: 0;

  > #{$class-type}grid__item {
    padding-left: 0;
  }
}

/*============================================================================
  WIDTHS
    - Create width classes, prefixed by the specified namespace.
==============================================================================*/
@mixin device-type($namespace:"") {
  /** Whole */
  #{$class-type}#{$namespace}one-whole       { width: 100%; }

  /* Halves */
  #{$class-type}#{$namespace}one-half        { width: 50%; }

  /* Thirds */
  #{$class-type}#{$namespace}one-third       { width: 33.333%; }
  #{$class-type}#{$namespace}two-thirds      { width: 66.666%; }

  /* Quarters */
  #{$class-type}#{$namespace}one-quarter     { width: 25%; }
  #{$class-type}#{$namespace}two-quarters    { width: 50%; }
  #{$class-type}#{$namespace}three-quarters  { width: 75%; }

  /* Fifths */
  #{$class-type}#{$namespace}one-fifth       { width: 20%; }
  #{$class-type}#{$namespace}two-fifths      { width: 40%; }
  #{$class-type}#{$namespace}three-fifths    { width: 60%; }
  #{$class-type}#{$namespace}four-fifths     { width: 80%; }

  /* Sixths */
  #{$class-type}#{$namespace}one-sixth       { width: 16.666%; }
  #{$class-type}#{$namespace}two-sixths      { width: 33.333%; }
  #{$class-type}#{$namespace}three-sixths    { width: 50%; }
  #{$class-type}#{$namespace}four-sixths     { width: 66.666%; }
  #{$class-type}#{$namespace}five-sixths     { width: 83.333%; }

  /* Eighths */
  #{$class-type}#{$namespace}one-eighth      { width: 12.5%; }
  #{$class-type}#{$namespace}two-eighths     { width: 25%; }
  #{$class-type}#{$namespace}three-eighths   { width: 37.5%; }
  #{$class-type}#{$namespace}four-eighths    { width: 50%; }
  #{$class-type}#{$namespace}five-eighths    { width: 62.5%; }
  #{$class-type}#{$namespace}six-eighths     { width: 75%; }
  #{$class-type}#{$namespace}seven-eighths   { width: 87.5%; }

  /* Tenths */
  #{$class-type}#{$namespace}one-tenth       { width: 10%; }
  #{$class-type}#{$namespace}two-tenths      { width: 20%; }
  #{$class-type}#{$namespace}three-tenths    { width: 30%; }
  #{$class-type}#{$namespace}four-tenths     { width: 40%; }
  #{$class-type}#{$namespace}five-tenths     { width: 50%; }
  #{$class-type}#{$namespace}six-tenths      { width: 60%; }
  #{$class-type}#{$namespace}seven-tenths    { width: 70%; }
  #{$class-type}#{$namespace}eight-tenths    { width: 80%; }
  #{$class-type}#{$namespace}nine-tenths     { width: 90%; }

  /* Twelfths */
  #{$class-type}#{$namespace}one-twelfth     { width: 8.333%; }
  #{$class-type}#{$namespace}two-twelfths    { width: 16.666%; }
  #{$class-type}#{$namespace}three-twelfths  { width: 25%; }
  #{$class-type}#{$namespace}four-twelfths   { width: 33.333%; }
  #{$class-type}#{$namespace}five-twelfths   { width: 41.666% }
  #{$class-type}#{$namespace}six-twelfths    { width: 50%; }
  #{$class-type}#{$namespace}seven-twelfths  { width: 58.333%; }
  #{$class-type}#{$namespace}eight-twelfths  { width: 66.666%; }
  #{$class-type}#{$namespace}nine-twelfths   { width: 75%; }
  #{$class-type}#{$namespace}ten-twelfths    { width: 83.333%; }
  #{$class-type}#{$namespace}eleven-twelfths { width: 91.666%; }
}

/*================ Clearfix helper on uniform grids ================*/
@mixin clearfix-helper($namespace:"") {
  .grid-uniform {
    #{$class-type}#{$namespace}one-half:nth-child(2n+1),
    #{$class-type}#{$namespace}one-third:nth-child(3n+1),
    #{$class-type}#{$namespace}one-quarter:nth-child(4n+1),
    #{$class-type}#{$namespace}one-fifth:nth-child(5n+1),
    #{$class-type}#{$namespace}one-sixth:nth-child(6n+1),
    #{$class-type}#{$namespace}two-sixths:nth-child(3n+1),
    #{$class-type}#{$namespace}three-sixths:nth-child(2n+1),
    #{$class-type}#{$namespace}two-eighths:nth-child(4n+1),
    #{$class-type}#{$namespace}four-eighths:nth-child(2n+1),
    #{$class-type}#{$namespace}five-tenths:nth-child(2n+1),
    #{$class-type}#{$namespace}one-twelfth:nth-child(12n+1),
    #{$class-type}#{$namespace}two-twelfths:nth-child(6n+1),
    #{$class-type}#{$namespace}three-twelfths:nth-child(4n+1),
    #{$class-type}#{$namespace}four-twelfths:nth-child(3n+1),
    #{$class-type}#{$namespace}six-twelfths:nth-child(2n+1)    { clear: both; }
  }
}

/*================ Helper show/hide classes around our breakpoints ================*/
@mixin device-helper($namespace:"") {
  #{$class-type}#{$namespace}show        { display: block!important; }
  #{$class-type}#{$namespace}is-show        { display: block!important; }
  #{$class-type}#{$namespace}hide        { display: none!important; }
  #{$class-type}#{$namespace}is-hide        { display: none!important; }

  #{$class-type}#{$namespace}text-left   { text-align: left!important; }
  #{$class-type}#{$namespace}text-right  { text-align: right!important; }
  #{$class-type}#{$namespace}text-center { text-align: center!important; }

  #{$class-type}#{$namespace}left        { float: left!important; }
  #{$class-type}#{$namespace}right       { float: right!important; }
}

/*================ Our regular, non-responsive width and helper classes ================*/
@include device-type();
@include device-helper();

/*================ Our responsive classes, if we have enabled them ================*/
@if $responsive == true {
  @each $name in $breakpoint-has-widths {
    @include grid-media-query($name) {
      @include device-type('#{$name}--');
      @include device-helper('#{$name}--');
      @include clearfix-helper('#{$name}--');
    }
  }
}

/*============================================================================
  PUSH
    - Push classes, to move grid items over to the right by certain amounts
==============================================================================*/
@mixin push-setup($namespace: "") {
  /* Whole */
  #{$class-type}push--#{$namespace}one-whole       { left: 100%; @include silent-relative(); }

  /* Halves */
  #{$class-type}push--#{$namespace}one-half        { left: 50%; @include silent-relative(); }

  /* Thirds */
  #{$class-type}push--#{$namespace}one-third       { left: 33.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-thirds      { left: 66.666%; @include silent-relative(); }

  /* Quarters */
  #{$class-type}push--#{$namespace}one-quarter     { left: 25%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-quarters    { left: 50%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}three-quarters  { left: 75%; @include silent-relative(); }

  /* Fifths */
  #{$class-type}push--#{$namespace}one-fifth       { left: 20%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-fifths      { left: 40%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}three-fifths    { left: 60%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}four-fifths     { left: 80%; @include silent-relative(); }

  /* Sixths */
  #{$class-type}push--#{$namespace}one-sixth       { left: 16.666%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-sixths      { left: 33.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}three-sixths    { left: 50%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}four-sixths     { left: 66.666%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}five-sixths     { left: 83.333%; @include silent-relative(); }

  /* Eighths */
  #{$class-type}push--#{$namespace}one-eighth      { left: 12.5%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-eighths     { left: 25%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}three-eighths   { left: 37.5%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}four-eighths    { left: 50%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}five-eighths    { left: 62.5%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}six-eighths     { left: 75%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}seven-eighths   { left: 87.5%; @include silent-relative(); }

  /* Tenths */
  #{$class-type}push--#{$namespace}one-tenth       { left: 10%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-tenths      { left: 20%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}three-tenths    { left: 30%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}four-tenths     { left: 40%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}five-tenths     { left: 50%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}six-tenths      { left: 60%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}seven-tenths    { left: 70%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}eight-tenths    { left: 80%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}nine-tenths     { left: 90%; @include silent-relative(); }

  /* Twelfths */
  #{$class-type}push--#{$namespace}one-twelfth     { left: 8.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}two-twelfths    { left: 16.666%; @include silent-relative();  }
  #{$class-type}push--#{$namespace}three-twelfths  { left: 25%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}four-twelfths   { left: 33.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}five-twelfths   { left: 41.666%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}six-twelfths    { left: 50%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}seven-twelfths  { left: 58.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}eight-twelfths  { left: 66.666%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}nine-twelfths   { left: 75%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}ten-twelfths    { left: 83.333%; @include silent-relative(); }
  #{$class-type}push--#{$namespace}eleven-twelfths { left: 91.666%; @include silent-relative(); }
}

@if $push == true {
  [class*="push--"]{ position:relative; }

  @include push-setup();

  @if $responsive == true {
    @each $name in $breakpoint-has-push {
      @include grid-media-query($name) {
        @include push-setup('#{$name}--');
      }
    }
  }
}

/*============================================================================
  PULL
    - Pull classes, to move grid items back to the left by certain amounts
==============================================================================*/
@mixin pull-setup($namespace: "") {
  /* Whole */
  #{$class-type}pull--#{$namespace}one-whole       { right: 100%; @include silent-relative(); }

  /* Halves */
  #{$class-type}pull--#{$namespace}one-half        { right: 50%; @include silent-relative(); }

  /* Thirds */
  #{$class-type}pull--#{$namespace}one-third       { right: 33.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-thirds      { right: 66.666%; @include silent-relative(); }

  /* Quarters */
  #{$class-type}pull--#{$namespace}one-quarter     { right: 25%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-quarters    { right: 50%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-quarters  { right: 75%; @include silent-relative(); }

  /* Fifths */
  #{$class-type}pull--#{$namespace}one-fifth       { right: 20%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-fifths      { right: 40%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-fifths    { right: 60%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}four-fifths     { right: 80%; @include silent-relative(); }

  /* Sixths */
  #{$class-type}pull--#{$namespace}one-sixth       { right: 16.666%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-sixths      { right: 33.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-sixths    { right: 50%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}four-sixths     { right: 66.666%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}five-sixths     { right: 83.333%; @include silent-relative(); }

  /* Eighths */
  #{$class-type}pull--#{$namespace}one-eighth      { right: 12.5%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-eighths     { right: 25%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-eighths   { right: 37.5%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}four-eighths    { right: 50%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}five-eighths    { right: 62.5%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}six-eighths     { right: 75%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}seven-eighths   { right: 87.5%; @include silent-relative(); }

  /* Tenths */
  #{$class-type}pull--#{$namespace}one-tenth       { right: 10%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-tenths      { right: 20%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-tenths    { right: 30%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}four-tenths     { right: 40%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}five-tenths     { right: 50%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}six-tenths      { right: 60%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}seven-tenths    { right: 70%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}eight-tenths    { right: 80%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}nine-tenths     { right: 90%; @include silent-relative(); }

  /* Twelfths */
  #{$class-type}pull--#{$namespace}one-twelfth     { right: 8.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}two-twelfths    { right: 16.666%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}three-twelfths  { right: 25%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}four-twelfths   { right: 33.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}five-twelfths   { right: 41.666%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}six-twelfths    { right: 50%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}seven-twelfths  { right: 58.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}eight-twelfths  { right: 66.666%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}nine-twelfths   { right: 75%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}ten-twelfths    { right: 83.333%; @include silent-relative(); }
  #{$class-type}pull--#{$namespace}eleven-twelfths { right: 91.666%; @include silent-relative(); }
}

@if $pull == true {
  [class*="pull--"]{ position:relative; }

  @include pull-setup();

  @if $responsive == true {
    @each $name in $breakpoint-has-pull {
      @include grid-media-query($name) {
        @include pull-setup('#{$name}--');
      }
    }
  }
}

/*================ Partials | Helper Classes ================*/
.clearfix {
  &:after {
    content: "";
    display: table;
    clear: both; }
  *zoom: 1;
}

.display-table {
  display: table;
  table-layout: fixed;
  width: 100%;
}

.display-table-cell {
  display: table-cell;
  vertical-align: middle;
  float: none;
}

@include at-query ($min, $large) {
  .large--display-table {
    display: table;
    table-layout: fixed;
    width: 100%;
  }

  .large--display-table-cell {
    display: table-cell;
    vertical-align: middle;
    float: none;
  }
}

/*============================================================================
  #OOCSS Media Object
    - http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/
==============================================================================*/
.media,
.media-flex {
  overflow: hidden;
  _overflow: visible;
  zoom: 1;
}

.media-img {
  float: left;
  margin-right: $gutter;
}

.media-img-right {
  float: right;
  margin-left: $gutter;
}

.media-img img,
.media-img-right img {
  display: block;
}

/*================ Partials | Links and Buttons ================*/
a,
.text-link {
  cursor: pointer;
  color: $colorLink;
  text-decoration: none;
  background: transparent;

  &:hover,
  &:focus {
    color: $colorLinkHover;
  }
}

button {
  overflow: visible;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

.btn {
  font-family: $btnFontFamily;
  font-weight: $btnFontWeight;
  font-size: 1em;
  box-shadow: 0px 2px 5px rgba(0,0,0,0.15);
  display: inline-block;
  padding: 10px 34px;
  margin: 0;
  margin-bottom: 3px;
  line-height: 1.42;
  text-decoration: none;
  text-transform: uppercase;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  cursor: pointer;
  border: 1px solid transparent;
  @include prefix('user-select', 'none');
  -webkit-appearance: none;
  -moz-appearance: none;
  border-radius: $radius;

  /*================ Set primary button colors - can override later ================*/
  background-color: $colorBtnPrimary;
  color: $colorBtnPrimaryText;
  @include transition(background-color 0.1s ease-in);

  &:hover {
    background-color: $colorBtnPrimaryHover;
    color: $colorBtnPrimaryText;
    box-shadow: 0px 2px 3px rgba(0,0,0,0.2);
  }

  &:active,
  &:focus {
   background-color: $colorBtnPrimaryActive;
   color: $colorBtnPrimaryText;
   box-shadow: 0px 1px 4px rgba(0,0,0,0.2);
  }

  &[disabled]:not(.btn--loading),
  &.disabled:not(.btn--loading) {
    cursor: default;
    color: darken($disabledBorder , 10%);
    background-color: $disabledGrey;
    box-shadow: 0px 2px 5px rgba(0,0,0,0.25);
  }
  .fa{
  	margin-right: 5px;
  }
  .svg-icon{
  	margin-top: -0.2em;
    margin-right: 4px;
  }
  &.btn--large {
    padding: 12px 40px;
    font-size: 1.1em;
  }
}

.btn--secondary,
input.btn--secondary {
  @extend .btn;
  background-color: $colorBtnSecondary;

  &:hover {
    background-color: $colorBtnSecondaryHover;
    color: $colorBtnSecondaryText;
  }

  &:active,
  &:focus {
   background-color: $colorBtnSecondaryActive;
   color: $colorBtnSecondaryText;
  }
}

.btn--small {
  padding: 4px 5px;
  font-size: em(12px);
}



.btn--full {
  width: 100%;
}

.btn--tertiary,
input.btn--tertiary {
  @extend .btn;
  margin: 0;
  background-color: $colorBtnTertiary;
  color: $colorBtnTertiaryText;
  // border: 1px solid $colorBorder;

  &:hover {
    opacity: 1;
    background-color: $colorBtnTertiaryHover;
  }

  &:active,
  &:focus {
   background-color: $colorBtnTertiaryActive;
  }
}

select.btn--tertiary {
  padding: 6px 28px 6px 10px;
  font-size: 0.85em;

  &:hover,
  &:focus,
  &:active {
    background-color: $colorBtnTertiary;
    color: $colorBtnTertiaryText;
  }
}

/*================ Force an input/button to look like a text link ================*/
.text-link {
  display: inline;
  border: 0 none;
  padding: 0;
  margin: 0;
}

.btn--flipped {
  background-color: $successGreen;
  color: #ffffff;

  &:hover,
  &:focus,
  &:active {
    background-color: lighten($successGreen, 5%);
    color: #ffffff;
  }
}

/*================ Button loading indicator, when supported ================*/
.supports-csstransforms .btn--loading {
  position: relative;

  color: transparent !important;
  pointer-events: none;

  &:after {
    content: '';
    display: block;
    width: 24px;
    height: 24px;
    position: absolute;
    left: 50%;
    top: 50%;
    margin-left: -12px;
    margin-top: -12px;
    border-radius: 50%;
    border: 3px solid $colorBtnPrimaryText;
    border-top-color: transparent;
    @include animation(spin 1s infinite linear);
  }
}

/*================ Partials | Images, SVG, and iframes ================*/
img {
  border: 0 none;
}

svg:not(:root) {
  overflow: hidden;
}

img.auto,
.grid__item img,
.grid__item iframe {
  max-width: 100%;
}

.video-wrapper {
  position: relative;
  overflow: hidden;
  max-width: 100%;
  padding-bottom: 56.25%;
  height: 0;
  height: auto;

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

.table-wrapper {
  max-width: 100%;
  overflow: auto;
}

/*================ Partials | Forms ================*/
form {
  margin-bottom: $gutter;
}

input,
textarea,
button,
select {
  font-size: 1em;
}

button,
input[type="text"],
input[type="date"],
input[type="search"],
input[type="password"],
input[type="email"],
input[type="file"],
input[type="number"],
input[type="tel"],
input[type="submit"],
textarea {
  -webkit-appearance: none;
  -moz-appearance: none;
}

input,
textarea,
select,
fieldset {
  border-radius: $radius;
  max-width: 100%;

  &.input-full {
    width: 100%;
  }
}

input,
select,
textarea {
  padding: 10px 15px;
  line-height: 1.42;
}

fieldset {
  border: 1px solid $colorBorder;
  padding: $gutter / 2;
}

legend {
  border: 0;
  padding: 0;
}

optgroup {
  font-weight: bold;
}

input {
  display: inline-block;
  width: auto;
}

button,
input[type="submit"] {
  cursor: pointer;
}

input[type="submit"] {
  @extend .btn;
}

/*================ Input width and border ================*/
input[type="text"],
input[type="date"],
input[type="search"],
input[type="password"],
input[type="email"],
input[type="file"],
input[type="number"],
input[type="tel"],
textarea,
select {
  border: 1px solid $colorBorder;
  width: 100%;
  max-width: 100%;
  display: block;
  margin: 0 0 1em;
  color: #000 !important;

  &:focus,
  &.on-focus {
    border: 1px solid darken($colorBorder, 15%);
    box-shadow: 0px 0px 0px 3px lighten($colorBorder, 10%);
  }

  &[disabled],
  &.disabled {
    cursor: default;
    background-color: $disabledGrey;
    border-color: $disabledBorder;
  }
}

textarea {
  min-height: 100px;
}

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin: 0;
  padding: 0;
}

select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg fill='%23666' id='Layer_1' data-name='Layer 1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Ctitle%3Eicon-arrow-down%3C/title%3E%3Cpath d='M50,78.18A7.35,7.35,0,0,1,44.82,76L3.15,34.36A7.35,7.35,0,1,1,13.55,24L50,60.44,86.45,24a7.35,7.35,0,1,1,10.4,10.4L55.21,76A7.32,7.32,0,0,1,50,78.18Z'/%3E%3C/svg%3E ");
  background-color: #fff;
  background-size: 0.7em;
  background-repeat: no-repeat;
  background-position: right 15px center;
  padding-right: 1.7em;
  text-indent: 0.01px;
  text-overflow: '';
  cursor: pointer;

  /*================ Hide the svg arrow in IE9 and below ================*/
  .ie9 &,
  .lt-ie9 & {
    padding-right: 10px;
    background-image: none;
  }
}

// Force option color (affects IE only)
option {
  color: #000;
  background-color: #fff;
}

select::-ms-expand {
  display: none;
}

/*================ Form labels ================*/
.hidden-label {
  @include visuallyHidden;
}

label,
legend {
  display: block;
  margin-bottom: 2px;

  &.inline {
    display: inline;
  }

  .form-horizontal &.label--hidden,
  &.label--hidden {
    height: 0;
    width: 0;
    margin-bottom: 0;
    overflow: hidden;

    .ie9 &,
    .lt-ie9 & {
      height: auto;
      width: auto;
      margin-bottom: 2px;
      overflow: visible;
    }
  }

  .form-horizontal &:not(.label--hidden) {
    @extend .h4;
  }
}

/*================ We don't want the same label treatment for checkboxes/radios ================*/
input[type="checkbox"] + label,
input[type="radio"] + label {
  font-weight: normal;
}

label[for] {
  cursor: pointer;
}

.label-hint {
  color: #999;
}

/*================ Horizontal Form ================*/
form.form-horizontal,
.form-horizontal {
  margin-bottom: 0;

  input[type="text"],
  input[type="date"],
  input[type="search"],
  input[type="password"],
  input[type="email"],
  input[type="file"],
  input[type="number"],
  input[type="tel"],
  textarea,
  select,
  label {
    display: inline-block;
    margin-bottom: 0;
    width: auto;
  }
}

@include at-query($min, $large) {
  .form-horizontal ~ .form-horizontal {
    padding-left: $gutter / 2;
  }
}

@include at-query($max, $medium) {
  .form-horizontal ~ .form-horizontal {
    margin-top: $gutter / 4;
  }
}

/*================ Error styles ================*/
input[type="text"],
input[type="date"],
input[type="search"],
input[type="password"],
input[type="email"],
input[type="file"],
input[type="number"],
input[type="tel"],
textarea {
  &.error {
    border-color: $errorRed;
    background-color: $errorRedBg;
    color: $errorRed;
  }
}

label.error {
  color: $errorRed;
}


/*================ Input Group ================*/
.input-group {
  position: relative;
  display: table;
  border-collapse: separate;

  .input-group-field:first-child,
  .input-group-btn:first-child,
  .input-group-btn:first-child > .btn,
  input[type="hidden"]:first-child + .input-group-field,
  input[type="hidden"]:first-child + .input-group-btn > .btn {
    border-radius: $radius 0 0 $radius;
  }

  .input-group-field:last-child,
  .input-group-btn:last-child > .btn {
   border-radius: 0 $radius $radius 0;
  }

  input {
    // Nasty Firefox hack for inputs http://davidwalsh.name/firefox-buttons
    &::-moz-focus-inner {
      border: 0;
      padding: 0;
      margin-top: -1px;
      margin-bottom: -1px;
    }
  }
}

.input-group-field,
.input-group-btn {
  display: table-cell;
  vertical-align: middle;
  margin: 0;
}

.input-group .btn,
.input-group .input-group-field {
  height: 37px;
}

.input-group .input-group-field {
  width: 100%;
  margin-bottom: 0;
}

.input-group-btn {
  position: relative;
  white-space: nowrap;
  width: 1%;
  padding: 0;
}

/*================ Search bar ================*/
.search-bar {
  max-width: 50%;

  @include at-query ($max, $medium) {
    margin-left: auto;
    margin-right: auto;
    max-width: 100%;
  }
}

/*================ Partials | Icons ================*/
@font-face {
  font-family: 'icons';
  src: url('icons.eot');
  src: url('icons.eot#iefix') format("embedded-opentype"),
       url('icons.woff') format("woff"),
       url('icons.ttf') format("truetype"),
       url('icons.svg#timber-icons') format("svg");
  font-weight: normal;
  font-style: normal;
}
$socialIconFontStack: 'icons';

.icon-fallback-text .icon {
  display: none;

  .supports-fontface & {
    display: inline-block;
  }
}

/*============================================================================
  A generic way to visually hide content while
  remaining accessible to screen readers (h5bp.com)
==============================================================================*/
.supports-fontface .icon-fallback-text .fallback-text {
  clip: rect(0 0 0 0);
  overflow: hidden;
  position: absolute;
  height: 1px;
  width: 1px;
}

.icon:before {
  display: none;
}

.supports-fontface .icon:before {
  display: inline;
  font-family: $socialIconFontStack;
  text-decoration: none;
  speak: none; // future fallback, limited in effect currently
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/*================ Icon mapping ================*/
.icon-amazon_payments:before { content: "\e800"; }
.icon-american_express:before { content: "\41"; }
.icon-arrow-down:before { content: "\e607"; }
.icon-bitcoin:before { content: "\42"; }
.icon-cart:before { content: "\e600"; }
.icon-cirrus:before { content: "\43"; }
.icon-dankort:before { content: "\64"; }
.icon-diners_club:before { content: "\63"; }
.icon-discover:before { content: "\44"; }
.icon-dogecoin:before { content: "\e904"; }
.icon-dwolla:before { content: "\e905"; }
.icon-facebook:before { content: "\66"; }
.icon-fancy:before { content: "\46"; }
.icon-forbrugsforeningen:before { content: "\e906"; }
.icon-google-plus:before { content: "\e900"; }
.icon-google_plus:before { content: "\e900"; }
.icon-grid-view:before { content: "\e603"; }
.icon-hamburger:before { content: "\e601"; }
.icon-instagram:before { content: "\e901"; }
.icon-interac:before { content: "\49"; }
.icon-jcb:before { content: "\4a"; }
.icon-laser:before { content: "\e907"; }
.icon-list-view:before { content: "\e604"; }
.icon-litecoin:before { content: "\e908"; }
.icon-maestro:before { content: "\6d"; }
.icon-master:before { content: "\4d"; }
.icon-minus:before { content: "\e602"; }
.icon-paypal:before { content: "\50"; }
.icon-pinterest:before { content: "\70"; }
.icon-plus:before { content: "\e605"; }
.icon-rss:before { content: "\72"; }
.icon-search:before { content: "\73"; }
.icon-solo:before { content: "\e902"; }
.icon-stripe:before { content: "\53"; }
.icon-switch:before { content: "\e903"; }
.icon-tumblr:before { content: "\74"; }
.icon-twitter:before { content: "\54"; }
.icon-vimeo:before { content: "\76"; }
.icon-visa:before { content: "\56"; }
.icon-x:before { content: "\e606"; }
.icon-youtube:before { content: "\79"; }

.payment-icons {
  @include prefix('user-select', 'none');
  cursor: default;
  // @include desaturate;

  li {
    display: inline-block;
    margin: 0 2px 2px;
    width: initial;
    height: 31px;

    img {
      display: inline-block;
      width: initial;
      height: 31px;
    }

    span {
      color: #555555;
    }
  }

  .icon {
    font-size: 30px;
    line-height: 30px;
  }

  .fallback-text {
    text-transform: capitalize;
  }
}

.social-icons li {
  margin: 0 ($gutter / 3) ($gutter / 2);
  vertical-align: middle;

  @include at-query ($min, $postSmall) {
    margin-left: 0;
  }

  .icon {
    font-size: 22px;
    line-height: 22px;
  }

  a {
    color: map-get(map-get($presets, $current), social_link_color);

    &:hover {
      color: darken(map-get(map-get($presets, $current), social_link_color), 10%);
    }
  }
}


/*================ Module-specific styles ================*/
/*================ Module | Breadcrumbs and Tag Sorting ================*/
.breadcrumb,
.tags {
  font-family: $accentFontStack;
  color: $colorTextBody;

  a {
    color: $colorTextBody;

    &:hover,
    &:focus,
    &:active {
      color: $colorPrimary;
    }
  }
}

.breadcrumb {
  margin-bottom: $gutter / 2;
  // color: $colorTextBody;
  font-size: 1em;

  a,
  span {
    display: inline;
    padding-right: 5px;
    margin-right: 5px;

    &:first-child {
      padding-left: 0;
    }
  }
}

.breadcrumb__sep {
  font-size: 1.4em;
  line-height: 1;
}

.tags {
  color: $colorPrimary;

  a {
    display: inline-block;
    padding: 5px 7px 5px 0;
    margin-right: 12px;
  }
}

.tag--active a {
  color: $colorPrimary;
}

/*================ Module | Footer ================*/
.site-footer {
  background-color: $colorFooterBg;
  padding-top: $gutter;
  padding-bottom: 20px;
  color: $colorFooterText;

  form {
    margin-bottom: 0;
  }

  @include at-query($min, $medium) {
    input {
      max-width: 250px;
    }
  }

  .text-center input {
    margin-left: auto;
    margin-right: auto;
  }

  p {
    margin-bottom: 10px;
  }

  ul {
    margin-bottom: 0;
  }

  @include at-query ($min, $large) {
    padding-top: $gutter;
  }

  @include at-query ($max, $medium) {
    .grid__item {
      margin-bottom: $gutter;

      &:last-child {
        margin-bottom: 0;
      }
    }
  }

  .grid {
    margin-top: $gutter / 2;
  }
}

.site-footer__links {

  a {
    color: $colorFooterText;

    &:hover,
    &:active {
      color: $colorLink;
    }
  }

  &.inline-list li {
    padding: 0 10px;
  }

}


@include at-query($min, $large) {
  footer h4 {
    padding-bottom: $gutter / 3;
    border-bottom: 1px solid $colorBorder;
  }
}

@include at-query($max, $medium) {
  footer {
    padding-top: $gutter / 3;
    border-top: 1px solid $colorBorder;
  }
}


/*================ Module | Notes and Form Feedback ================*/
.note,
.errors {
  border-radius: $radius;
  padding: 6px 12px;
  margin-bottom: $gutter / 2;
  border: 1px solid transparent;
  font-size: 0.9em;
  font-weight: bold;
  text-align: left;
  a {
    text-decoration: underline;
    &:hover {
      text-decoration: underline;
    }
  }

  ul,
  ol {
    margin-top: 0;
    margin-bottom: 0;
  }

  li:last-child {
    margin-bottom: 0;
  }

  p {
    margin-bottom: 0;
  }
}

.note {
  border-color: $colorBorder;
}

.errors {
  ul {
    list-style: disc outside;
    margin-left: 20px;
  }
}

.form-success {
  color: $successGreen;
  background-color: $successGreenBg;
  border-color: $successGreen;

  a {
    color: $successGreen;
    text-decoration: underline;
  }
}

.form-error,
.errors {
  color: $errorRed;
  background-color: $errorRedBg;
  border-color: $errorRed;

  a {
    color: $errorRed;
    text-decoration: underline;
  }
}

/*================ Module | Pagination ================*/
.pagination {
  margin-bottom: 1em;
}

.pagination-custom {
  display: inline-block;
  padding-left: 0;
  margin: 0;
  border-radius: $radius;
}

.pagination-custom > li {
  display: inline;
}

.pagination-custom > li > a,
.pagination-custom > li > span {
  position: relative;
  float: left;
  padding: 5px 10px;
  margin-left: -1px;
  line-height: 1.42;
  text-decoration: none;
}

.pagination-custom > li:first-child > a,
.pagination-custom > li:first-child > span {
  margin-left: 0;
}

.pagination-custom > .active > a,
.pagination-custom > .active > span,
.pagination-custom > .active > a:hover,
.pagination-custom > .active > span:hover,
.pagination-custom > .active > a:focus,
.pagination-custom > .active > span:focus {
  z-index: 2;
  cursor: default;
  color: $colorTextBody;
}

.pagination-custom > .disabled > span,
.pagination-custom > .disabled > a,
.pagination-custom > .disabled > a:hover,
.pagination-custom > .disabled > a:focus {
  color: $colorTextBody;
  cursor: not-allowed;
}

.pagination-custom-lg > li > a,
.pagination-custom-lg > li > span {
  padding: 10px 16px;
  font-size: em(18px);
}

.pagination-custom-sm > li > a,
.pagination-custom-sm > li > span {
  padding: 5px 10px;
  font-size: em(12px);
}

/*================ Module | Rich Text Editor ================*/
.rte {

  // Add some top margin to headers from the rich text editor
  h1, h2, h3, h4, h5, h6 {
    margin-top: 2em;

    &:first-child {
      margin-top: 0;
    }
  }

  h5,
  .h5 {
    text-transform: uppercase;
  }

  > div {
    margin-bottom: $gutter / 2;
  }

  ul, ol {
    margin-left: 35px;
  }

  ul {
    @extend ul.disc;

    ul {
    list-style: circle outside;

      ul {
        @extend ul.square;
      }
    }
  }

  li {
    margin-bottom: 0.4em;
  }

  img {
    max-width: 100%;
    height: auto;
  }

  table {
    table-layout: fixed;
  }
}

.rte--header {
  margin-bottom: $gutter;
}

/*================ Module | Section Headers ================*/
.section-header {
  text-align: left;
  margin-bottom: $gutter / 2;
}

.section-header--small {
  margin-bottom: 0;
}

.section-header--medium {
  margin-bottom: $gutter / 4;
}

.section-header--large {
  margin-bottom: $gutter;
}

.section-header--breadcrumb {
  margin-bottom: $gutter / 2;
}

.section-header__title {
  color: $colorNavText;
}

.section-header__title--left,
.section-header__link--right {
  padding-bottom: $gutter / 2.5;
  margin-bottom: 0;
}

.section-header__link--right {
  margin-top: $gutter / 2;
}

@include at-query ($min, $large) {
  .section-header {
    display: table;
    width: 100%;
    text-align: left;
  }

  .section-header__title--left {
    display: table-cell;
    vertical-align: middle;

    h1, h2, h3, h4,
    .h1, .h2, .h3, .h4 {
      margin-bottom: 0;
    }
  }

  .section-header__link--right {
    display: table-cell;
    vertical-align: middle;
    text-align: right;
    width: 300px;
    margin-top: 0;

    @include at-query ($max, $medium) {
      margin-bottom: $gutter;
    }
  }
}

.section-header__link--right {

  .form-horizontal {
    display: inline-block;
  }

  .form-horizontal,
  .collection-view {
    vertical-align: middle;
  }

  select,
  option {
    // prevent style select and option in browsers on windows platform
    //color: $colorTextBody;
    font-size: 0.9em;
  }

  @include at-query ($min, $postSmall) {
    label + select,
    .collection-view {
      margin-left: $gutter / 2;
    }

    label:not(.label--hidden) + select {
      margin-left: $gutter / 6;
    }
  }

  @include at-query ($min, $large) {
    select {
      max-width: 200px;
    }
  }
}

@include at-query ($max, $medium) {
  .template-collection {
    .section-header__link--right {
      display: block;
      width: 100%;
      margin-top: 0;

      .form-horizontal {
        width: 100%;

        select {
          width: 100%;
          margin-left: 0;
        }
      }
    }
  }
}

.view-more {
  clear: both;
  display: block;
  font-size: 0.85em;
  text-align: center;
  margin-top: $gutter / 2;

  @include at-query($min, $large) {
    display: none;
  }
}

/*================ Module | Site Header ================*/
.site-header {
  padding: 40px 0;
  background-color: $colorHeader;

  @include at-query ($min, $large) {
    padding: $gutter 0;

    .large--display-table {
      min-height: 86px;
    }
  }

  @include at-query ($min, $large) {
    .grid {
      display: table;
      table-layout: fixed;
      width: 100%;

      > .grid__item {
        float: none;
        display: table-cell;
        vertical-align: middle;
      }
    }
  }
}

.site-header__logo {
  text-align: center;
  margin: 0 auto;
  max-width: 100%;

  a {
    color: $colorNavText;
    margin: 0 auto;
  }

  .logo-wrapper {
    max-width: map-get(map-get($presets, $current), logo_width) + px;
  }

  a,
  a:hover,
  a:focus {
    text-decoration: none;
  }

  a, img {
    display: block;
  }

  img {
    margin: 0 auto;
  }
}

// {% if settings.nav_below_logo %}
  @include at-query($min, $large) {
    .h1.site-header__logo,
    h1.site-header__logo {
      font-size: 1.6 * $headerBaseFontSize;
    }
  }
// {% endif %}

.site-header--text-links {
  margin-bottom: 0;
}

/*============ If logo is on the same line as navigation ============ */
// {% unless settings.nav_below_logo or settings.show_header_lines == false %}
//   .site-header .grid--full {
//     border-bottom: 1px solid $colorBorder;
//     padding-bottom: $gutter;
//   }
// {% endunless %}

/*================ Module | Site Nav and Dropdowns ================*/
.site-nav {
  // @include accentFontStack;
  font-family: $topbarFontFamily;
  cursor: default;
  margin: 0 auto;
  text-align: center;

  li {
    margin: 0;
    display: block;
  }
  
  ul{
    margin: 0;
  }

  & > li {
    display: inline-block;

    &:first-child > a {
      // padding-left: 0;
    }

    &:first-child .site-nav__dropdown {
      // left: - $gutter / 2;
    }

    &:last-child > a {
      // padding-right: 0;
    }
  }
}

.site-nav__link {
  display: block;
  text-decoration: none;
  padding: $gutter / 2;
  white-space: nowrap;
  // color: $colorNavText;
  color: $colorTextBody;
  font-size: $topbarFontSize;
  font-weight: $topbarFontWeight;
  -webkit-transition: all 150ms ease-in-out;
  transition: all 150ms ease-in-out;
  position: relative;

  &:hover,
  &:active,
  &:focus {
    color: $colorPrimary;
    // color: $colorNavText;
    // color: $colorTextBody;
  }

  .site-nav--active & {
    font-weight: bold;
  }
  
  .arrow-icon{
    position: absolute;
    top: calc(50% - 1px);
    right: 10px;
    -webkit-transform: translate(0, -50%);
    transform: translate(0, -50%);
    z-index: 1;
    width: 12px;
    height: 12px;
    display: flex;
    justify-content: center;
    align-items: center;
    svg{
      fill: currentColor;
      width: 12px;
      height: 12px;
      -webkit-transition: all 150ms ease-in-out;
      transition: all 150ms ease-in-out;
    }
  }
}

/*================ Dropdowns ================*/

.template-index{
  .site-nav__dropdown{
    // background-color: darken($colorTopBar,10%);
    background-color: $colorBody;
    color: $colorTextBody;
    li{
      &:hover,
      &:active,
      &:focus {
    	color: $colorTextBody;
        // background-color: darken($colorTopBar,15%);
      }
    }
  }
}

.site-nav__dropdown {
  text-transform: none;
  display: none;
  position: absolute;
  float: left;
  top: calc(100% - 10px);
  left: 0;
  margin: 0;
  text-align: left;
  z-index: 20;
  font-size: $topbarFontSize;
  font-weight: $topbarFontWeight;
  // font-weight: bold;
  // {% if settings.nav_below_logo and settings.show_header_lines %}
    // border: 1px solid $colorBorder;
    // border-top: none;
  // {% else %}
  //   box-shadow: 0px 1px 1px rgba(0,0,0,0.2);
  // {% endif %}
  // background-color: $colorBody;
  // Fix dropdown when background transparent
  background-color: #fff;
  color: #000;
  border-radius: 0;
  padding: 15px 20vw;
  
  width: 100%;
  box-shadow: 0px 6px 15px rgba(0,0,0,0.17);
  flex-wrap: wrap;
  
  max-height: 80vh;
  overflow: auto;
  // justify-content: center;

  .supports-no-touch .site-nav--has-dropdown:hover > &,
  .site-nav--has-dropdown.nav-hover > &,
  .nav-focus + &,
  .show-dropdown & {
    display: flex;
  }

  >li{
  	margin-bottom: 5px;
  }
  
  >li > .site-nav__link {
   font-size: 1.2em;
   font-weight: bold;
   color: #000;
   padding: 7px 20px 7px;
  }
  .site-nav__dropdown_level-4{
    margin-left: 10px;
  }
  .site-nav__link {
  	font-weight: bold;
    padding: 2px 20px 2px;
    
    // color: $colorTextBody;
    color: #666;
    &:hover,
    &:active,
    &:focus {
      color: $colorPrimary;
      // color: #555;
      // color: #000;
    }
  }
  

  .site-nav__dropdown {
    top: 0;
    left: 100%;
    font-size: 0.9rem;
    display: none;
  }
  // Fix dropdown when background transparent
   li{
    &:hover,
    &:active,
    &:focus {
      color: $colorTextBody;
      background-color: $colorBody;
    }
  }
}

/*================ Search bar in header ================*/
.nav-search {
  position: relative;
  padding: 7px 0;

  @include at-query ($max, $medium) {
    padding: 0 0 ($gutter / 2);
    margin: 0 auto;
    text-align: center;
  }

  .input-group,
  .input-group-field {
    margin-bottom: 0;
  }
}

/*================ Header message (theme setting) ================*/
.header-message {
  text-align: center;
  margin: ($gutter / 2) 0 0;
  line-height: 1;

  @include at-query($min, $large) {
    margin-bottom: $gutter / 2;
  }
}

/*================= If logo is above navigation ================== */
// {% if settings.nav_below_logo %}
  .site-nav {
    // {% if settings.show_header_lines %}
/*     border-top: 1px solid $colorBorder;
    border-bottom: 1px solid $colorBorder; */
    // {% endif %}
/*     margin-top: $gutter; */
  }
// {% endif %}


/*================ View-specific styles ================*/
/*================ Templates | Blog and Comments ================*/
.comment {
  margin-bottom: $gutter;

  & + & {
    border-top: 1px solid $colorBorder;
    padding-top: $gutter;
  }
}

.meta-sep {
  position: relative;
  top: -1px;
  padding: 0 5px;
  font-size: 0.7em;
}

.blog-date {
  margin-top: -0.5em;
}

aside h4 ~ h4 {
  margin-top: 1.5 * $gutter;
}

aside time em {
  font-size: 0.8em;
}

@include at-query($max, $medium) {
  article {
    margin-bottom: $gutter;
  }
}

.article__image {
  display: block;
  margin-bottom: 0.75 * $gutter;
}

/*================ Templates | Cart Page ================*/
.cart__row {
  position: relative;
  padding-top: $gutter;

  & + & {
    margin-top: $gutter;
    border-top: 1px solid $colorBorder;
  }

  &:first-child {
    margin-top: 0;
  }

  &:first-child {
    padding-top: 0;
    border-top: 0 none;
  }

  .js-qty {
    margin: 0;
  }
}


@include at-query ($min, $large) {
  .cart__row--table-large {
    display: table;
    table-layout: fixed;
    width: 100%;

    .grid__item {
      display: table-cell;
      vertical-align: middle;
      float: none;
    }
  }
}

.cart__image {
  display: block;

  img {
    display: block;
  }
}

.cart__subtotal,
.cart-additional-savings__price {
  margin: 0 0 0 ($gutter / 3);
  display: inline;
}

.cart__mini-labels {
  display: block;
  margin: ($gutter / 3) 0;
  font-size: em(12px);

  @include at-query ($min, $large) {
    display: none;
  }
}

input.cart__quantity-selector {
  width: 100px;
  margin: 0 auto;
}

.cart__remove {
  display: block;
  width: 30px;
}

.cart__note-add.is-hidden {
  display: none;
}

.cart__note {
  display: none;

  &.is-active {
    display: block;
  }
}

.cart-item__discount,
.cart-additional-savings__savings,
.cart-subtotal__savings {
  display: block;
}

.update-cart,
.checkout {
  margin-bottom: $gutter / 3 !important;
}

.cart__additional_checkout {
  margin: ($gutter / 2) 0 0;

  input {
    padding: 0;
  }

  & > *:not(script) {
    padding: 5px 0 0 5px;
    vertical-align: top;
    line-height: 1;
    
    &:first-child,
    &:empty {
      padding-left: 0px;
    }
  }
}

/*================ Templates | Product Page ================*/
.product-single__variants {
  display: none;

  .no-js & {
    display: block;
  }
}

.product-single__photos {
  margin-bottom: $gutter / 2;
}

.product-single__photos,
.product-single__thumbnails {
  a, img {
    display: block;
    margin: 0 auto;
    max-width: 100%;
  }
}

// {% if settings.product_image_zoom_type == 'lightbox' %}
#ProductPhotoImg {
  cursor: -webkit-zoom-in;
  cursor: -moz-zoom-in;
  cursor: zoom-in;
}
// {% endif %}

.image-zoom {
  cursor: move;
}

.no-js {
  #ProductPhotoImg,
  .image-zoom {
    cursor: default;
  }
}

.product-single__thumbnails li {
  margin-bottom: $gutter;
}

.product-single__prices {
  font-family: $headerFontStack;
  margin-bottom: $gutter;
}

.product-single__price {
  color: $colorTextBody;
  font-size: 1.5 * $baseFontSize;
  font-weight: bold;
}

.product-single__sale-price {
  opacity: 0.6;
  margin-left: 6px;
  font-size: 1.5 * $baseFontSize;
  font-weight: bold;
}
.product-single__sale-percent{
  font-size: 1.5 * $baseFontSize;
  font-weight: bold;
}

.product-single__quantity {
  margin-bottom: $gutter;

  &.is-hidden {
    display: none;
  }

  .quantity-selector {
    display: inline-block;
    width: 100px;
  }
}

@include at-query($min, $large) {
  .single-option-selector {
    width: auto;
  }
}

button + .note {
  margin-top: $gutter / 3;
}

#MobileNav{
	-webkit-overflow-scrolling: touch;
}

.site-nav--has-dropdown{
  &:hover,
  &.nav-hover{
    >ul{
      -webkit-animation: fade_in 0.25s ease-in-out;
      -moz-animation: fade_in 0.25s ease-in-out;
      -o-animation: fade_in 0.25s ease-in-out;
      animation: fade_in 0.25s ease-in-out;
    }
    > .site-nav__link{
    	color: $colorPrimary;
    }
    .arrow-icon{
      svg{
    	-webkit-transform: rotate(-180deg);
      	transform: rotate(-180deg);
      }
    }
  }
  > .site-nav__link{
  	padding-right: $gutter;
  }
}

/*!
 * Datepicker v1.0.8
 * https://fengyuanchen.github.io/datepicker
 *
 * Copyright 2014-present Chen Fengyuan
 * Released under the MIT license
 *
 * Date: 2019-06-23T08:07:37.208Z
 */
.datepicker-container {
  background-color: #fff;
  direction: ltr;
  font-size: 15px;
  left: 0;
  line-height: 40px;
  position: fixed;
  -webkit-tap-highlight-color: transparent;
  top: 0;
  -ms-touch-action: none;
  touch-action: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 280px;
  z-index: -1;
  &::before,
  &::after {
    border: 5px solid transparent;
    content: " ";
    display: block;
    height: 0;
    position: absolute;
    width: 0;
  }
}

.datepicker-dropdown {
  border: 1px solid #ccc;
  -webkit-box-shadow: 0 3px 6px #ccc;
  box-shadow: 0 3px 6px #ccc;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  position: absolute;
  z-index: 1;
}

.datepicker-inline {
  position: static;
}

.datepicker-top-left,
.datepicker-top-right {
  border-top-color: $colorPrimary;
  &::before,
  &::after {
    border-top: 0;
    left: 10px;
    top: -5px;
  }
  &::before {
    border-bottom-color: $colorPrimary;
  }
  &::after {
    border-bottom-color: #fff;
    top: -4px;
  }
}

.datepicker-bottom-left,
.datepicker-bottom-right {
  border-bottom-color: $colorPrimary;
  &::before,
  &::after {
    border-bottom: 0;
    bottom: -5px;
    left: 10px;
  }
  &::before {
    border-top-color: $colorPrimary;
  }
  &::after {
    border-top-color: #fff;
    bottom: -4px;
  }
}

.datepicker-top-right,
.datepicker-bottom-right {
  &::before,
  &::after {  
    left: auto;
    right: 10px;
  }
}

.datepicker-panel > ul {
  margin: 0;
  padding: 0;
  width: 102%;
  
  &::before,
  &::after {
    content: " ";
    display: table;
  }

  &::after {
    clear: both;
  }

  & > li {
    background-color: #fff;
    color: #000;
    cursor: pointer;
    float: left;
    height: 40px;
    list-style: none;
    margin: 0;
    padding: 0;
    text-align: center;
    width: 40px;
  }

  & > li:hover {
    background-color: rgba($colorPrimary ,0.1);
  }

  & > li.muted,
  & > li.muted:hover {
    color: #999;
  }

  & > li.highlighted {
    background-color: rgba($colorPrimary ,0.1);
  }

  & > li.highlighted:hover {
    background-color: rgba($colorPrimary ,0.1);
  }

  & > li.picked,
  & > li.picked:hover {
    font-weight: bold;
    color: $colorPrimary;
    background-color: rgba($colorPrimary ,0.2);
  }

  & > li.disabled,
  & > li.disabled:hover {
    background-color: #fff;
    color: #ccc;
    cursor: default;
  }

  & > li.disabled.highlighted,
  & > li.disabled:hover.highlighted {
    background-color: rgba($colorPrimary ,0.1);
  }

  & > li[data-view="years prev"],
  & > li[data-view="year prev"],
  & > li[data-view="month prev"],
  & > li[data-view="years next"],
  & > li[data-view="year next"],
  & > li[data-view="month next"],
  & > li[data-view="next"] {
    font-size: 31px;
    font-weight: bold;
  }

  & > li[data-view="years current"],
  & > li[data-view="year current"],
  & > li[data-view="month current"] {
    width: 200px;
  }

  &[data-view="years"] > li,
  &[data-view="months"] > li {
    height:  calc(280px /4);
    line-height:  calc(280px /4);
    width:  calc(280px /4);
  }

  &[data-view="week"] > li,
  &[data-view="week"] > li:hover {
    background-color: #fff;
    cursor: default;
  }
}

.template-customers{
  .datepicker-panel ul[data-view="week"]{
    display: none;
  }
}

.datepicker-hide {
  display: none;
}

.events-none{
	pointer-events: none;
}
